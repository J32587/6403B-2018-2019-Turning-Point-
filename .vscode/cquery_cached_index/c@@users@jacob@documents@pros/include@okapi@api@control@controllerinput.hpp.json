16
{"last_modification_time":0,"language":2,"import_file":"c:/users/jacob/documents/pros/include/okapi/api/control/controllerinput.hpp","args_hash":3090781529217958874,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":5127515870942423657,"detailed_name":"okapi","short_name_offset":0,"short_name_size":5,"kind":3,"hover":"","comments":"","declarations":[],"spell":"10:11-10:16|-1|1|2","extent":"10:1-21:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["10:11-10:16|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":17204414386348465193,"detailed_name":"okapi::ControllerInput","short_name_offset":7,"short_name_size":15,"kind":5,"hover":"","comments":"","declarations":[],"spell":"11:29-11:44|0|2|2","extent":"11:23-20:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0],"vars":[],"instances":[],"uses":[]},{"id":3,"usr":16704731688760920943,"detailed_name":"T","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"11:20-11:21|-1|1|2","extent":"11:11-11:21|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["19:11-19:12|-1|1|4"]}],"funcs":[{"id":0,"usr":769432500235522763,"detailed_name":"T okapi::ControllerInput::controllerGet()","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nGet the sensor value for use in a control loop. This method might be automatically called in\nanother thread by the controller.\n\n@return the current sensor value, or ``PROS_ERR`` on a failure.","declarations":[{"spell":"19:13-19:26|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[]}